global:
  ## Reference to one or more secrets to be used when pulling images
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  imagePullSecrets: []
  # - name: "image-pull-secret"

k8gb:
  imageRepo: absaoss/k8gb
  # image tag defaults to Chart.AppVersion, see Chart.yaml
  # but can be overrided with imageTag key
  # imageTag:
  hookImage: bitnami/kubectl:1.21.1
  dnsZone: "cloud.example.com" # dnsZone controlled by gslb
  dnsZoneNegTTL: 300 # Negative TTL for SOA record
  edgeDNSZone: "example.com" # main zone which would contain gslb zone to delegate
  edgeDNSServers: # host/ip[:port] format is supported here where ports defaults to 53
      - "1.1.1.1" # use this DNS server as a main resolver to enable cross k8gb DNS based communication
  clusterGeoTag: "eu" # used for places where we need to distinguish between differnet Gslb instances
  extGslbClustersGeoTags: "us" # comma-separated list of external gslb geo tags to pair with
  hostAlias: # use https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/ inside operator pod. Useful for advanced testing scenarios and to break dependency on EdgeDNS for cross k8gb collaboration
    enabled: false
    ip: "172.17.0.1"
    hostnames:
     - "gslb-ns-us-cloud.example.com"
  reconcileRequeueSeconds: 30
  log:
    format: simple # log format (simple,json)
    level: info # log level (panic,fatal,error,warn,info,debug,trace)
  splitBrainCheck: false
  metricsAddress: "0.0.0.0:8080"
  runAsUser: 1000

externaldns:
  image: k8s.gcr.io/external-dns/external-dns:v0.9.0
  interval: "20s"
  securityContext:
    fsGroup: 65534 # For ExternalDNS to be able to read Kubernetes and AWS token files
    runAsUser: 1000
    runAsNonRoot: true

coredns:
  # service: refer to https://www.k8gb.io/docs/service_upgrade.html for upgrading CoreDNS service steps
  isClusterService: false
  deployment:
    skipConfig: true
  image:
    repository: absaoss/k8s_crd
    tag: "v0.0.6"
  serviceAccount:
    create: true
    name: coredns
  customLabels:
    # label coredns svc by label to prevent further deletions by helm hook
    k8gb-migrated-svc: "true"

infoblox:
  enabled: false
  gridHost: 10.0.0.1
  wapiVersion: 2.3.1
  wapiPort: 443
  sslVerify: true
  httpRequestTimeout: 20
  httpPoolConnections: 10

route53:
  enabled: false
  hostedZoneID: ZXXXSSS
  # specify IRSA Role in AWS ARN format or disable it by setting to `false`
  irsaRole: arn:aws:iam::111111:role/external-dns

ns1:
  enabled: false
  # optional custom NS1 API endpoint for on-prem setups
  # endpoint: https://api.nsone.net/v1/
  ignoreSSL: false

openshift:
  enabled: false
