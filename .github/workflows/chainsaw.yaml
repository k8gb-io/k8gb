name: Chainsaw

on:
  push:
    paths-ignore:
      - '**.md'
      - '**.svg'
      - '**.drawio'
      - '.spelling'
  pull_request:
    branches:
      - master
    # The specific activity types are listed here to include "labeled" and "unlabeled"
    # (which are not included by default for the "pull_request" trigger).
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]
    paths-ignore:
      - '**.md'
      - '**.svg'
      - '**.drawio'
      - '.spelling'
permissions:
  contents: read

jobs:
  skip-check:
    runs-on: ubuntu-latest
    name: Skip the job?
    outputs:
          should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

    - id: skip_check
      uses: fkirc/skip-duplicate-actions@f75f66ce1886f00957d99748a42c724f4330bdcf # v5.3.1
      with:
        skip_after_successful_duplicate: 'true'
        do_not_skip: '["workflow_dispatch", "schedule"]'

  chainsaw:
    runs-on: ubuntu-24.04
    needs: skip-check
    if: ${{ needs.skip-check.outputs.should_skip != 'true' }} && !contains( github.event.pull_request.labels.*.name, 'renovate')
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Setup Chainsaw
        uses: kyverno/action-install-chainsaw@6354895e0f99ab23d3e38d85cf5c71b5dc21d727 # v0.2.13
        with:
          release: v0.2.11

      - name: Check install
        run: chainsaw version

      - name: Setup golang
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: ./go.mod

      - name: Setup helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1
        with:
          version: v3.18.4

      - name: Build artifacts
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          version: v1.9.2
          args: release --rm-dist --skip-publish --skip-validate --snapshot --skip-sbom --skip-sign
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create edgeDNS k3s Cluster
        uses: AbsaOSS/k3d-action@4e8b3239042be1dc0aed6c5eb80c13b18200fc79
        with:
          cluster-name: "edgedns"
          args: -c k3d/edge-dns.yaml

      - name: Create 1st k3s Cluster
        uses: AbsaOSS/k3d-action@4e8b3239042be1dc0aed6c5eb80c13b18200fc79
        with:
          cluster-name: "test-gslb1"
          args: -c k3d/test-gslb1.yaml

      - name: Create 2nd k3s Cluster
        uses: AbsaOSS/k3d-action@4e8b3239042be1dc0aed6c5eb80c13b18200fc79
        with:
          cluster-name: "test-gslb2"
          args: -c k3d/test-gslb2.yaml

      - name: K8GB deployment
        run: |
          make deploy-test-version list-running-pods
          echo "Cluster 1 (eu):"
          kubectl get no -owide --context=k3d-test-gslb1
          echo "Cluster 2 (us):"
          kubectl get no -owide --context=k3d-test-gslb2

      - name: Run Chainsaw
        run: make chainsaw

      - name: Print debug info
        if: always()
        uses: ./.github/actions/print-chainsaw-debug

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: chainsaw-logs
          path: ${{ github.workspace }}/tmp/chainsaw
