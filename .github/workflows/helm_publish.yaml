name: Helm Publish

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to publish (e.g., v0.16.0)'
        required: true
        type: string
permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-24.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          ref: ${{ inputs.tag || github.ref }}
      - uses: dave-mcconnell/helm-gh-pages-microservices@8478af5f0fd712cc0fb59f2c99e0688f3f591287
        with:
          access-token: ${{ secrets.CR_TOKEN }}
          source-charts-folder: 'chart'
          destination-repo: k8gb-io/k8gb
          destination-branch: gh-pages

      - name: Push to OCI Registry
        run: |
          echo ${{ secrets.CR_TOKEN }} | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin
          git fetch origin gh-pages
          git checkout origin/gh-pages -- charts/
          ls -la charts/
          OCI_REPO="${OCI_REPO:-oci://ghcr.io/k8gb-io/charts}"
          for chart in charts/k8gb-*.tgz; do
            if [ -f "$chart" ]; then
              helm push "$chart" "$OCI_REPO"
            fi
          done

      - name: Create k3s cluster
        uses: AbsaOSS/k3d-action@4e8b3239042be1dc0aed6c5eb80c13b18200fc79
        with:
          cluster-name: "test-gslb1"
          args: -c k3d/test-gslb1.yaml
      - name: Smoke test helm installation
        run: |
          helm repo add k8gb https://k8gb.io/
          for i in $(seq 16)
          do
            helm repo update
            helm -n k8gb upgrade -i k8gb k8gb/k8gb --wait --create-namespace --version=$(make version) && exit 0
            _sec=$(echo "1.5^$i" | bc)
            echo "Waiting ${_sec} seconds.."
            sleep ${_sec}
          done
      - name: Invoke workflow for OLM (community-operators)
        if: always()
        continue-on-error: true
        uses: benc-uk/workflow-dispatch@e2e5e9a103e331dad343f381a29e654aea3cf8fc
        with:
          workflow: olm_pr.yaml
          token: ${{ secrets.CR_TOKEN }}
          inputs: '{ "bundleVersion": "master" }' # during the release 'master' is what we want here
      - name: Invoke workflow for OLM (community-operators-prod)
        if: always()
        continue-on-error: true
        uses: benc-uk/workflow-dispatch@e2e5e9a103e331dad343f381a29e654aea3cf8fc
        with:
          workflow: olm_pr.yaml
          token: ${{ secrets.CR_TOKEN }}
          inputs: |
            {
              "bundleVersion": "master",
              "downstreamRepo": "k8gb-io/community-operators-prod",
              "upstreamRepo": "redhat-openshift-ecosystem/community-operators-prod"
            }
