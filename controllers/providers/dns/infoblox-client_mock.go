// Code generated by MockGen. DO NOT EDIT.
// Source: controllers/providers/dns/infoblox-client.go

// Package dns is a generated GoMock package.
package dns

/*
Copyright 2021 The k8gb Contributors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Generated by GoLic, for more details see: https://github.com/AbsaOSS/golic
*/

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	ibclient "github.com/infobloxopen/infoblox-go-client"
)

// MockInfobloxClient is a mock of InfobloxClient interface.
type MockInfobloxClient struct {
	ctrl     *gomock.Controller
	recorder *MockInfobloxClientMockRecorder
}

// MockInfobloxClientMockRecorder is the mock recorder for MockInfobloxClient.
type MockInfobloxClientMockRecorder struct {
	mock *MockInfobloxClient
}

// NewMockInfobloxClient creates a new mock instance.
func NewMockInfobloxClient(ctrl *gomock.Controller) *MockInfobloxClient {
	mock := &MockInfobloxClient{ctrl: ctrl}
	mock.recorder = &MockInfobloxClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInfobloxClient) EXPECT() *MockInfobloxClientMockRecorder {
	return m.recorder
}

// GetObjectManager mocks base method.
func (m *MockInfobloxClient) GetObjectManager() (*ibclient.ObjectManager, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObjectManager")
	ret0, _ := ret[0].(*ibclient.ObjectManager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObjectManager indicates an expected call of GetObjectManager.
func (mr *MockInfobloxClientMockRecorder) GetObjectManager() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObjectManager", reflect.TypeOf((*MockInfobloxClient)(nil).GetObjectManager))
}
