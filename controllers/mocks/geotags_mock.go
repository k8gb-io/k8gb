// Code generated by MockGen. DO NOT EDIT.
// Source: controllers/geotags/geotags.go
//
// Generated by this command:
//
//	mockgen -package=mocks -destination=controllers/mocks/geotags_mock.go -source=controllers/geotags/geotags.go GeoTags
//

// Package mocks is a generated GoMock package.
package mocks

/*
Copyright 2021-2025 The k8gb Contributors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Generated by GoLic, for more details see: https://github.com/AbsaOSS/golic
*/

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGeoTags is a mock of GeoTags interface.
type MockGeoTags struct {
	ctrl     *gomock.Controller
	recorder *MockGeoTagsMockRecorder
}

// MockGeoTagsMockRecorder is the mock recorder for MockGeoTags.
type MockGeoTagsMockRecorder struct {
	mock *MockGeoTags
}

// NewMockGeoTags creates a new mock instance.
func NewMockGeoTags(ctrl *gomock.Controller) *MockGeoTags {
	mock := &MockGeoTags{ctrl: ctrl}
	mock.recorder = &MockGeoTagsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGeoTags) EXPECT() *MockGeoTagsMockRecorder {
	return m.recorder
}

// GetExternalClusterNSNamesByHostname mocks base method.
func (m *MockGeoTags) GetExternalClusterNSNamesByHostname(host string) map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExternalClusterNSNamesByHostname", host)
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// GetExternalClusterNSNamesByHostname indicates an expected call of GetExternalClusterNSNamesByHostname.
func (mr *MockGeoTagsMockRecorder) GetExternalClusterNSNamesByHostname(host any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExternalClusterNSNamesByHostname", reflect.TypeOf((*MockGeoTags)(nil).GetExternalClusterNSNamesByHostname), host)
}
