package lbservice

/*
Copyright 2022 The k8gb Contributors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
Generated by GoLic, for more details see: https://github.com/AbsaOSS/golic
*/

import (
	k8gbv1beta1 "github.com/k8gb-io/k8gb/api/v1beta1"
	"github.com/k8gb-io/k8gb/controllers/utils"
	corev1 "k8s.io/api/core/v1"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

type ReferenceResolver struct {
	lbService *corev1.Service
}

// NewReferenceResolver creates a reference resolver capable of understanding services of type loadbalancer
func NewReferenceResolver(gslb *k8gbv1beta1.Gslb, k8sClient client.Client) (*ReferenceResolver, error) {
	// FIXME fetch the service referenced by the GSLB and store it in the refResolver struct

	// you will need the following functions:
	// * metav1.LabelSelectorAsSelector to convert the label selector to a selector that can be used by the k8sclient
	// * k8sClient.List to list the services matching the selector

	// then, go through the services and filter out the ones that are not of type load balancer

	return &ReferenceResolver{}, nil
}

// GetServers retrieves the GSLB server configuration from the loadBalancer service
func (rr *ReferenceResolver) GetServers(dnsZone string) ([]*k8gbv1beta1.Server, error) {
	// FIXME compute a hostname and return it together with the Service you fetched in New

	return []*k8gbv1beta1.Server{}, nil
}

// GetGslbExposedIPs retrieves the load balancer IP address of the GSLB
func (rr *ReferenceResolver) GetGslbExposedIPs(edgeDNSServers utils.DNSList) ([]string, error) {
	// FIXME fetch the IP addresses from the status of the lbService

	return []string{}, nil
}
